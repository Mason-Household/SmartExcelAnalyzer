version: '3.8'

services:
  mongodb:
    image: mongo:5.0
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: smartexcelanalyzer
    ports:
      - "27017:27017"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - mongodata:/data/db

  llm-service:
    build:
      context: ./LLM
      dockerfile: llm.Dockerfile
    ports:
      - "8000:8000"
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - model_cache:/root/.cache/huggingface
    environment:
      - TEXT_GENERATION_MODEL=facebook/bart-large-cnn
      - EMBEDDING_MODEL=sentence-transformers/all-MiniLM-L6-v2
      - DB_CONNECTION_STRING=mongodb://admin:password@mongodb:27017/smartexcelanalyzer

  backend:
    build: 
      context: ./Backend
      dockerfile: backend.Dockerfile
    ports:
      - "5001:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - LLM_SERVICE_URL=http://llm-service:8000
      - MONGODB_DATABASE_NAME=smartexcelanalyzer
      - MONGODB_CONNECTION_STRING=mongodb://admin:password@mongodb:27017
    depends_on:
      - llm-service
      - mongodb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 120s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./Frontend
      dockerfile: frontend.Dockerfile
    ports:
      - "3000:80"
    environment:
      - BASE_API_URL=http://localhost:5001
    depends_on:
      - backend

  # Uncomment the following section to use PostgreSQL instead of MongoDB
  # db:
  #   image: postgres:14
  #   environment:
  #     POSTGRES_DB: smartexcelanalyzer
  #     POSTGRES_USER: admin
  #     POSTGRES_PASSWORD: password
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U admin -d smartexcelanalyzer"]
  #     interval: 120s
  #     timeout: 5s
  #     retries: 5
  #     start_period: 10s
  #   volumes:
  #     - pgdata:/var/lib/postgresql/data

volumes:
  model_cache:
    driver: local
  mongodata: